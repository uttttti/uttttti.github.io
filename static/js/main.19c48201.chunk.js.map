{"version":3,"sources":["features/drawerSlice.ts","components/MenuButtons/MenuButtons.tsx","components/Menu/Menu.tsx","components/Jumbotron/Jumbotron.tsx","components/Title/Title.tsx","components/About/About.tsx","constant.ts","components/Experience/Experience.tsx","components/Education/Education.tsx","components/Projects/Projects.tsx","components/Skills/Skills.tsx","components/Contact/Contact.tsx","components/Footer/Footer.tsx","components/ErrorBoundary/ErrorBoundary.tsx","components/Error/Error.tsx","components/Extra/Extra.tsx","components/Page/Page.tsx","components/App.tsx","components/store.ts","serviceWorker.ts","index.tsx"],"names":["drawerSlice","createSlice","name","initialState","value","reducers","openDrawer","state","closeDrawer","changeDrawer","action","payload","actions","selectDrawer","isOpen","MenuButtons","orientation","dispatch","useDispatch","ListItemLink","props","ListItem","button","component","className","data-testid","List","aria-label","map","content","key","href","onClick","_e","Menu","theme","unstable_createMuiStrictModeTheme","palette","primary","main","contrastText","secondary","text","isXS","useMediaQuery","breakpoints","down","isIOS","window","test","navigator","userAgent","trigger","useScrollTrigger","useSelector","toggleDrawer","event","type","Fab","size","color","ThemeProvider","SwipeableDrawer","anchor","open","onClose","onOpen","disableBackdropTransition","disableDiscovery","IconButton","Slide","appear","direction","in","AppBar","Toolbar","useStyles","makeStyles","createStyles","small","width","spacing","height","large","Jumbotron","classes","useTheme","Avatar","alt","src","Typography","variant","Button","download","Title","label","align","paragraph","About","myYears","Date","getFullYear","id","Container","API_BASE_URL","Experience","useState","experiences","setExperiences","useEffect","axios","get","then","res","data","catch","err","Timeline","experience","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","date","Paper","elevation","square","company","occupation","summary","Education","educations","setEducations","education","school","department","Projects","projects","project","title","skills","skill","index","Chip","Skills","setSkills","item","Contact","Alert","severity","icon","faGithub","faFacebook","faTwitter","faInstagram","Footer","ErrorBoundary","error","errorInfo","this","setState","toString","componentStack","children","React","Component","Error","Face","ErrorOutline","Extra","isShow","setIsShow","ImpersonationApiError","fooData","setFooData","mountOnEnter","unmountOnExit","Page","createMuiTheme","overrides","MuiTypography","root","fontFamily","h4","h6","subtitle1","subtitle2","body2","MuiButton","MuiChip","smoothscroll","polyfill","App","CssBaseline","path","store","configureStore","reducer","drawerSliceReducer","rawUseSelector","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.19c48201.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../components/store';\r\n\r\nexport type drawerState = {\r\n  value: boolean\r\n}\r\nconst initialState = {\r\n  value: false\r\n}\r\nexport const drawerSlice = createSlice({\r\n  name: 'isOpen',\r\n  initialState,\r\n  reducers: {\r\n    openDrawer: state => {\r\n      state.value = true\r\n    },\r\n    closeDrawer: state => {\r\n      state.value = false\r\n    },\r\n    changeDrawer: (state, action:PayloadAction<drawerState['value']>)  => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { openDrawer, closeDrawer, changeDrawer } = drawerSlice.actions;\r\n\r\nexport const selectDrawer = (state: RootState) => {\r\n  return state.isOpen.value;\r\n}\r\n\r\nexport default drawerSlice.reducer;\r\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport { useDispatch } from 'react-redux';\nimport { closeDrawer } from '../../features/drawerSlice';\n\nimport './MenuButtons.scss';\n\ntype MenuButtonsProps = {\n  orientation: 'vertical' | 'horizonal'\n}\n\nconst MenuButtons: React.FC<MenuButtonsProps> = ({orientation}: MenuButtonsProps) => { \n \n  const dispatch = useDispatch();\n\n  const updateActivateContent = () => {\n    dispatch(closeDrawer())\n  }\n  \n  const ListItemLink = (props: ListItemProps<'a', { button?: true }>) => {\n    return <ListItem button component=\"a\" {...props} />;\n  }\n\n  return (\n    <div className=\"MenuButtons\" data-testid=\"MenuButtons\">\n      <List\n        aria-label=\"menu\"\n        className={orientation}\n      >\n        {['About', 'Experience', 'Education', 'Projects', 'Skills', 'Contact'].map(content => (\n          <ListItemLink key={content} aria-label={content} href={`#${content}`} onClick={_e => updateActivateContent()}>{content}</ListItemLink>\n        ))}\n      </List>\n    </div>\n  )\n};\n\nexport default MenuButtons;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDrawer, changeDrawer, drawerState } from '../../features/drawerSlice';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Slide from '@material-ui/core/Slide';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Fab from '@material-ui/core/Fab';\nimport MenuButtons from '../MenuButtons/MenuButtons';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\n// drawerがStrictModeだとfindDOMNodeのエラーを吐くのでunstable_createMuiStrictModeThemeで回避\nimport { unstable_createMuiStrictModeTheme, ThemeProvider} from '@material-ui/core/styles';\n\nimport './Menu.scss';\n\nconst Menu: React.FC = () => {\n  const theme = unstable_createMuiStrictModeTheme({\n    palette: {\n      primary: {\n        main: '#BA68C8',\n        contrastText: '#F3E5F5'\n      },\n      secondary: {\n        main: '#EEE',\n        contrastText: '#BA68C8'\n      },\n      text: {\n        primary: '#453B47'\n      }\n    }\n  });\n  const isXS = useMediaQuery(theme.breakpoints.down('xs'));\n  const isIOS = typeof window !== \"undefined\" && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const trigger = useScrollTrigger();\n  const isOpen = useSelector(selectDrawer);\n  const dispatch = useDispatch();\n\n  const toggleDrawer = (isOpen: drawerState['value']) => (event: React.KeyboardEvent | React.MouseEvent) => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n    dispatch(changeDrawer(isOpen))\n  }\n\n  return (\n    <div className=\"Menu\" data-testid=\"Menu\">\n      { isXS ? (\n        <>\n          <Fab\n            size=\"small\"\n            color=\"primary\"\n            aria-label=\"open drawer\"\n            className=\"fab-button\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </Fab>\n          <ThemeProvider theme={theme}>\n            <SwipeableDrawer\n              anchor=\"right\"\n              open={isOpen}\n              onClose={toggleDrawer(false)}\n              onOpen={toggleDrawer(true)}\n              disableBackdropTransition={!isIOS}\n              disableDiscovery={isIOS}\n            >\n              <IconButton onClick={toggleDrawer(false)} className=\"close-button\">\n                <CloseIcon color=\"primary\" />\n              </IconButton>\n              <MenuButtons orientation=\"vertical\" />\n            </SwipeableDrawer>\n          </ThemeProvider>\n        </>\n      ) : (\n        <div className=\"menus\">\n          <Slide appear={false} direction=\"down\" in={!trigger}>\n            <AppBar>\n              <Toolbar>\n                <MenuButtons orientation=\"horizonal\"/>\n              </Toolbar>\n            </AppBar>\n          </Slide>\n          <Toolbar />\n        </div>\n      )}\n    </div>\n  )\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Jumbotron.scss';\nimport { Avatar, makeStyles, createStyles, Theme, Button, Typography, useTheme } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    large: {\n      width: theme.spacing(7),\n      height: theme.spacing(7),\n    },\n  }),\n);\n\nconst Jumbotron: React.FC = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isXS = useMediaQuery(theme.breakpoints.down('xs'));\n  return(\n    <div className={'Jumbotron ' + ( isXS? 'xs' : '')} data-testid=\"Jumbotron\">\n      <Avatar alt=\"Miyoko Hirao\" src=\"/static/image/avator.jpg\" className={classes.large}/>\n      <Typography variant=\"h4\" component=\"h1\" className=\"outline\">Frontend Engineer<span className=\"operator\">&&</span>Web Director</Typography>\n      <Button variant=\"outlined\" size=\"small\" color=\"secondary\" href=\"./resume.pdf\" download>Download PDF</Button>\n    </div>\n  );  \n}\n\nexport default Jumbotron;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport './Title.scss';\n\ntype TitleProps = {\n  label: string;\n}\n\nconst Title: React.FC<TitleProps> = ({label}) => (\n  <div className=\"Title\" data-testid=\"Title\">\n    <Typography\n      variant=\"h4\"\n      component=\"h2\"\n      align=\"center\"\n      paragraph\n    >\n      {label}\n    </Typography>\n  </div>\n);\n\nexport default Title;\n","import React from 'react';\nimport { Typography, Container } from '@material-ui/core';\nimport Title from '../Title/Title';\nimport './About.scss';\n\nconst About: React.FC = () => {\n  const today = new Date();\n  const myYears = today.getFullYear() - 2016;\n  return (\n    <div className=\"About\" data-testid=\"About\" id=\"About\">\n      <Container>\n        <Title label=\"About\"></Title>\n        <Typography variant=\"body2\">Webディレクターやチームリーダー経験の方が長いですが、現在はフロントエンドエンジニア歴約{myYears}年です。ほぼ独学、かつトライ&エラーで乗り切ってきたので、知識も経験も最前線にいるわけではない自覚はありますが、どんな環境であっても意欲的に取り組む所存です。</Typography>\n      </Container>\n    </div>\n  );\n}\n\nexport default About;\n","export const THEME_SETTING = {\n  palette: {\n    primary: {\n      main: '#BA68C8',\n      contrastText: '#F3E5F5'\n    },\n    secondary: {\n      main: '#F3E5F5',\n      contrastText: '#894D94'\n    },\n    text: {\n      primary: '#453B47'\n    }\n  },\n  overrides: {\n    MuiTypography: {\n      root: {\n        fontFamily: `\"M PLUS 1p\"`\n      },\n      h4: {\n        fontFamily: 'Poiret One'\n      },\n      h6: {\n        fontFamily: `\"M PLUS 1p\"`\n      },\n      subtitle1: {\n        fontFamily: `\"M PLUS 1p\"`\n      },\n      subtitle2: {\n        fontFamily: `\"M PLUS 1p\"`\n      },\n      body2: {\n        fontFamily: `\"M PLUS 1p\"`\n      }\n    },\n    MuiButton: {\n      root: {\n        fontFamily: 'Poiret One'\n      }\n    },\n    MuiChip: {\n      root: {\n        fontFamily: `\"M PLUS 1p\"`\n      }\n    }\n  }\n}\n\nexport const API_BASE_URL = 'https://my-json-server.typicode.com/uttttti/uttttti.github.io'\n","import React, { useState, useEffect } from 'react';\nimport './Experience.scss';\nimport axios, { AxiosResponse, AxiosError } from 'axios';\nimport Title from '../Title/Title';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport RoomIcon from '@material-ui/icons/Room';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { API_BASE_URL } from '../../constant';\nimport { Container } from '@material-ui/core';\n\ninterface Experience {\n  id: string;\n  date: string;\n  company: string;\n  occupation: string;\n  summary: string;\n}\n\nconst Experience: React.FC = () => {\n  const [experiences, setExperiences] = useState<Experience[]>([]);\n  useEffect(() => {\n    axios.get(API_BASE_URL + '/experience')\n      .then((res: AxiosResponse<Experience[]>) => setExperiences(res.data))\n      .catch((err: AxiosError) => {\n        setExperiences(()=>{\n          throw err;\n        })\n      });\n    }, []);\n\n  return (\n    <div className=\"Experience\" data-testid=\"Experience\" id=\"Experience\">\n      <Title label=\"Experience\" />\n      <div className=\"wrapper\">\n        <Container>\n          <Timeline className=\"timeline\">\n            {experiences.map((experience: Experience) => (\n              <TimelineItem key={experience.id}>\n              <TimelineSeparator>\n                <TimelineDot color=\"primary\">\n                  <RoomIcon />\n                </TimelineDot>\n                <TimelineConnector />\n              </TimelineSeparator>\n              <TimelineContent>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">{experience.date}</Typography>\n                <Paper elevation={0} variant=\"outlined\" square className=\"box\">\n                  <Typography variant=\"h6\" component=\"h3\">{experience.company}</Typography>\n                  <Typography variant=\"subtitle2\" component=\"h4\" color=\"textSecondary\">{experience.occupation}</Typography>\n                  <Typography variant=\"body2\" className=\"body\">{experience.summary}</Typography>\n                </Paper>\n              </TimelineContent>\n            </TimelineItem>\n            ))}\n          </Timeline>\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default Experience;\n","import React, { useState, useEffect } from 'react';\nimport './Education.scss';\nimport { Paper, Typography, Container } from '@material-ui/core';\nimport axios, { AxiosResponse, AxiosError } from 'axios';\nimport Title from '../Title/Title';\nimport { API_BASE_URL } from '../../constant';\n\ninterface Education {\n  id: string;\n  date: string;\n  school: string;\n  department: string;\n  summary: string;\n}\n\nconst Education: React.FC = () => {\n  const [educations, setEducations] = useState<Education[]>([]);\n\n  useEffect(() => {\n    axios.get(API_BASE_URL + '/education')\n      .then((res: AxiosResponse<Education[]>) => setEducations(res.data))\n      .catch((err: AxiosError) => {\n        setEducations(() => {\n          throw err;\n        })\n      });\n    }, []);\n    \n  return(\n    <div className=\"Education\" data-testid=\"Education\" id=\"Education\">\n      <Title label=\"Education\" />\n      <div className=\"wrapper\">\n        <Container className=\"contents\">\n          {educations.map((education: Education) => (\n            <Paper key={education.id} elevation={0} variant=\"outlined\" square className=\"box\">\n              <Typography variant=\"h6\" component=\"h3\">{education.school}</Typography>\n              <Typography variant=\"subtitle2\" component=\"h4\" color=\"textSecondary\">{education.department}</Typography>\n              <Typography variant=\"subtitle2\" component=\"h4\" color=\"textSecondary\">{education.date}</Typography>\n              <Typography variant=\"body2\" className=\"body\">{education.summary}</Typography>\n            </Paper>\n          ))}\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default Education;\n","import React, { useState, useEffect } from 'react';\nimport './Projects.scss';\nimport Title from '../Title/Title';\nimport { Paper, Typography, Chip, Container } from '@material-ui/core';\nimport axios, { AxiosResponse, AxiosError } from 'axios';\nimport { API_BASE_URL } from '../../constant';\n\ninterface Project {\n  id: string;\n  title: string;\n  summary: string;\n  skills: Array<string>;\n}\n\nconst Projects: React.FC = () => {\n  const [projects, setExperiences] = useState<Project[]>([]);\n\n  useEffect(() => {\n    axios.get(API_BASE_URL + '/projects')\n      .then((res: AxiosResponse<Project[]>) => setExperiences(res.data))\n      .catch((err: AxiosError) => {\n        setExperiences(() => {\n          throw err;\n        })\n      });\n    }, []);\n\n  return (\n    <div className=\"Projects\" data-testid=\"Projects\" id=\"Projects\">\n      <Title label=\"Projects\" />\n      <div className=\"wrapper\">\n        <Container>\n          {projects.map((project: Project) => (\n            <Paper key={project.id} elevation={0} variant=\"outlined\" square className=\"box\">\n              <Typography variant=\"h6\" component=\"h3\" align=\"center\">{project.title}</Typography>\n              <Typography variant=\"body2\" className=\"body\">{project.summary}</Typography>\n              <div className=\"skill-wrapper\">\n                {project.skills.map((skill: string, index) => (\n                  <Chip size=\"small\" color=\"secondary\" key={skill + index} label={skill} className=\"skill\"></Chip>\n                ))}\n              </div>\n            </Paper>\n          ))}\n        </Container>\n      </div>\n    </div>\n);\n}\nexport default Projects;\n","import React, { useState, useEffect } from 'react';\nimport './Skills.scss';\nimport Title from '../Title/Title';\nimport { Chip, Container } from '@material-ui/core';\nimport axios, { AxiosResponse, AxiosError } from 'axios';\nimport { API_BASE_URL } from '../../constant';\n\ntype Skills = {\n  item: Array<string>\n};\n\nconst Skills: React.FC = () => {\n  const [skills, setSkills] = useState<Skills[\"item\"]>([]);\n\n  useEffect(() => {\n    axios.get(API_BASE_URL + '/skills')\n      .then((res: AxiosResponse<Skills>) => setSkills(res.data.item))\n      .catch((err: AxiosError) => {\n        setSkills(()=>{\n          throw err;\n        })\n      });\n    }, []);\n  \n  return (\n    <div className=\"Skills\" data-testid=\"Skills\" id=\"Skills\">\n      <Title label=\"Skills\" />\n      <Container className=\"skills-wrapper\">\n        {skills.map((skill: string, index) => (\n          <Chip color=\"secondary\" key={skill + index} label={skill} className=\"skill\"></Chip>\n        ))}\n      </Container>\n    </div>\n);\n}\n\nexport default Skills;\n","import React from 'react';\nimport './Contact.scss';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faFacebook, faInstagram, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { IconButton, Typography } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nconst Contact: React.FC = () => (\n  <div className=\"Contact\" data-testid=\"Contact\" id=\"Contact\">\n    <Typography variant=\"h4\" color=\"secondary\" className=\"title\">Get in Touch</Typography>\n    <Alert severity=\"warning\"　className=\"note\">This is just a sample. — These links are invalid.</Alert>\n    <IconButton href=\"#Contact\"><FontAwesomeIcon icon={faGithub} color=\"#F3E5F5\" size=\"lg\"/></IconButton>\n    <IconButton href=\"#Contact\"><FontAwesomeIcon icon={faFacebook} color=\"#F3E5F5\" size=\"lg\"/></IconButton>\n    <IconButton href=\"#Contact\"><FontAwesomeIcon icon={faTwitter} color=\"#F3E5F5\" size=\"lg\"/></IconButton>\n    <IconButton href=\"#Contact\"><FontAwesomeIcon icon={faInstagram} color=\"#F3E5F5\" size=\"lg\"/></IconButton>\n  </div>\n);\n\nexport default Contact;\n","import React from 'react';\nimport './Footer.scss';\nimport { Fab } from '@material-ui/core';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nconst Footer: React.FC = () => (\n  <div className=\"Footer\" data-testid=\"Footer\">\n    <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\" href=\"#back-to-top-anchor\">\n      <KeyboardArrowUpIcon />\n    </Fab>\n    <footer>Copyright &copy; me. All Rights Reserved.</footer>\n  </div>\n);\n\nexport default Footer;\n","import React, { ErrorInfo } from 'react';\nimport './ErrorBoundary.scss';\nimport { Typography, Container } from '@material-ui/core';\n\nexport interface ErrorBoundaryProps {\n\tchildren(error?: Error): React.ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  error?: Error;\n  errorInfo? :ErrorInfo;\n}\n\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {};\n  }\n  \n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    this.setState({ error, errorInfo });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      return (\n        <Container className=\"ErrorBoundary\">\n          <Typography variant=\"h6\" className=\"message\">Something went wrong.</Typography>\n          <details className=\"ditails\">\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </Container>\n      );\n    }\n    return this.props.children()\n  }  \n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport './Error.scss';\nimport { Container, Typography, Button } from '@material-ui/core';\nimport { Face as FaceIcon, ErrorOutline as ErrorOutlineIcon} from '@material-ui/icons';\n\nconst Error: React.FC = () => (\n  <div className=\"Error\" data-testid=\"Error\">\n    <div className=\"background\">\n      <span className=\"bg1\"></span>\n      <span className=\"bg2\"></span>\n      <span className=\"bg3\"></span>\n    </div>\n    <Container className=\"contents\">\n      <p className=\"sorry\">\n        S<FaceIcon /><ErrorOutlineIcon className=\"error-icon\"/>RRY.\n      </p>\n      <Typography variant=\"body2\" className=\"message\">Something went wrong.</Typography>\n    </Container>\n    <Button variant=\"outlined\" color=\"secondary\" href=\"/\" className=\"back-btn\">Go Back</Button>\n  </div>\n);\n\nexport default Error;\n","import React, { useState, useEffect } from 'react';\nimport './Extra.scss';\nimport Alert from '@material-ui/lab/Alert';\nimport { Button, Slide, Container, Typography } from '@material-ui/core';\nimport Error from '../Error/Error';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\nimport axios, { AxiosResponse, AxiosError } from 'axios';\nimport { API_BASE_URL } from '../../constant';\n\n\ninterface Foo {\n  id: string;\n  date: string;\n  school: string;\n  department: string;\n  summary: string;\n}\n\nconst Extra: React.FC = () => {\n  const [isShow, setIsShow] = useState(false);\n\n  const switchErrorView = () => {\n    setIsShow(!isShow)\n  }\n  \n  const ImpersonationApiError: React.FC = () => {\n    const [fooData, setFooData] = useState<Foo[]>([]);\n    useEffect(() => {\n      axios.get(API_BASE_URL + '/foo')\n      .then((res: AxiosResponse<Foo[]>) => setFooData(res.data))\n      .catch((err: AxiosError) => {\n        setFooData(() => {\n          throw err;\n        })\n      });\n    }, []);\n    return (\n      <div>{fooData} should get an error!</div>\n    )\n  }\n\n  return (\n    <div className=\"Extra\" data-testid=\"Extra\">\n      <Alert severity=\"info\">I'm doing experiment in the area below from here.</Alert>\n      <div className=\"btn-wrapper\">\n        <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={ _e => switchErrorView()}>{isShow? 'hide': 'show'} Error Component</Button>\n      </div>\n      <Slide direction=\"up\" in={isShow} mountOnEnter unmountOnExit>\n        <div>\n          <Error />\n        </div>\n      </Slide>\n      <Container className=\"container\">\n        <Typography variant=\"caption\">Here is a sample impersonating an API error and ErrorBoundary.</Typography>\n        <ErrorBoundary>{()=> <ImpersonationApiError />}</ErrorBoundary>\n      </Container>\n    </div>\n  );\n}\nexport default Extra;\n","import React from 'react';\nimport './Page.scss';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Menu from '../Menu/Menu';\nimport Jumbotron from '../Jumbotron/Jumbotron';\nimport About from '../About/About';\nimport Experience from '../Experience/Experience';\nimport Education from '../Education/Education';\nimport Projects from '../Projects/Projects';\nimport Skills from '../Skills/Skills';\nimport Contact from '../Contact/Contact';\nimport Footer from '../Footer/Footer';\n\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\nimport { useTheme, useMediaQuery } from '@material-ui/core';\nimport Extra from '../Extra/Extra';\n\nconst Page: React.FC<RouteComponentProps> = () => {\n  const theme = useTheme();\n  const isXS = useMediaQuery(theme.breakpoints.down('xs'));\n  return (\n    <div className=\"Page\" data-testid=\"Page\">\n      <div className=\"app\" data-testid=\"App\" id=\"back-to-top-anchor\">\n        <div className={'bg-img '+ ( isXS? 'xs' : '')}></div>\n        <Menu />\n        <Jumbotron />\n        <About />\n        <ErrorBoundary>{() => <Experience />}</ErrorBoundary>\n        <ErrorBoundary>{() => <Education />}</ErrorBoundary>\n        <ErrorBoundary>{() => <Projects />}</ErrorBoundary>\n        <ErrorBoundary>{()=> <Skills />}</ErrorBoundary>\n        <Contact />\n        <Footer />\n        <Extra />\n      </div>\n    </div>\n  );\n}\n\nexport default Page;\n","import React from 'react';\nimport 'fontsource-poiret-one'\nimport 'fontsource-m-plus-1p'\nimport './App.scss';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport Page from './Page/Page';\nimport Error from './Error/Error';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport smoothscroll from 'smoothscroll-polyfill';\nimport { THEME_SETTING } from '../constant'\n\nconst theme = createMuiTheme(THEME_SETTING);\nsmoothscroll.polyfill();\n\nconst App: React.FC = () => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/error\" component={Error} />\n        <Route component={Page} />\n      </Switch>\n    </BrowserRouter>\n  </ThemeProvider>\n);\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { useSelector as rawUseSelector, TypedUseSelectorHook } from 'react-redux';\r\nimport drawerSliceReducer from '../features/drawerSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    isOpen: drawerSliceReducer\r\n  }\r\n});\r\nexport default store\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport const useSelector: TypedUseSelectorHook<RootState> = rawUseSelector\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './components/store';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}