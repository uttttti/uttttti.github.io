{"version":3,"sources":["features/drawerSlice.ts","components/MenuButtons/MenuButtons.tsx","components/Menu/Menu.tsx","components/Jumbotron/Jumbotron.tsx","components/Title/Title.tsx","components/About/About.tsx","components/Experience/Experience.tsx","components/Education/Education.tsx","components/Projects/Projects.tsx","components/Skills/Skills.tsx","components/Contact/Contact.tsx","components/Footer/Footer.tsx","components/Page/Page.tsx","components/Error/Error.tsx","components/App.tsx","components/store.ts","serviceWorker.ts","index.tsx"],"names":["drawerSlice","createSlice","name","initialState","value","reducers","openDrawer","state","closeDrawer","changeDrawer","action","payload","actions","selectDrawer","isOpen","MenuButtons","orientation","dispatch","useDispatch","ListItemLink","props","ListItem","button","component","className","data-testid","List","aria-label","map","content","key","href","onClick","_e","Menu","theme","unstable_createMuiStrictModeTheme","palette","primary","main","contrastText","secondary","text","isXS","useMediaQuery","breakpoints","down","isIOS","window","test","navigator","userAgent","trigger","useScrollTrigger","useSelector","toggleDrawer","event","type","Fab","size","color","ThemeProvider","SwipeableDrawer","anchor","open","onClose","onOpen","disableBackdropTransition","disableDiscovery","IconButton","Slide","appear","direction","in","AppBar","Toolbar","useStyles","makeStyles","createStyles","small","width","spacing","height","large","Jumbotron","classes","Alert","severity","variant","Avatar","alt","src","Typography","Button","Title","label","align","paragraph","About","Container","Experience","routeProps","useState","experiences","setExperiences","useEffect","axios","get","then","res","data","catch","err","history","push","Timeline","experience","TimelineItem","id","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","date","Paper","elevation","square","company","occupation","summary","Education","educations","setEducations","education","school","department","Projects","projects","project","title","skills","skill","index","Chip","Skills","setSkills","item","Contact","icon","faGithub","faTwitter","faFacebook","faInstagram","Footer","ScrollTop","scroll","top","behavior","createMuiTheme","Page","CssBaseline","Error","Face","ErrorOutline","App","path","exact","store","configureStore","reducer","drawerSliceReducer","rawUseSelector","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.617be730.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../components/store';\r\n\r\nexport type drawerState = {\r\n  value: boolean\r\n}\r\nconst initialState = {\r\n  value: false\r\n}\r\nexport const drawerSlice = createSlice({\r\n  name: 'isOpen',\r\n  initialState,\r\n  reducers: {\r\n    openDrawer: state => {\r\n      state.value = true\r\n    },\r\n    closeDrawer: state => {\r\n      state.value = false\r\n    },\r\n    changeDrawer: (state, action:PayloadAction<drawerState['value']>)  => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { openDrawer, closeDrawer, changeDrawer } = drawerSlice.actions;\r\n\r\nexport const selectDrawer = (state: RootState) => {\r\n  return state.isOpen.value;\r\n}\r\n\r\nexport default drawerSlice.reducer;\r\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport { useDispatch } from 'react-redux';\nimport { closeDrawer } from '../../features/drawerSlice';\n\nimport './MenuButtons.scss';\n\ntype MenuButtonsProps = {\n  orientation: 'vertical' | 'horizonal'\n}\n\nconst MenuButtons: React.FC<MenuButtonsProps> = ({orientation}: MenuButtonsProps) => { \n \n  const dispatch = useDispatch();\n\n  const updateActivateContent = () => {\n    dispatch(closeDrawer())\n  }\n  \n  const ListItemLink = (props: ListItemProps<'a', { button?: true }>) => {\n    return <ListItem button component=\"a\" {...props} />;\n  }\n\n  return (\n    <div className=\"MenuButtons\" data-testid=\"MenuButtons\">\n      <List\n        aria-label=\"menu\"\n        className={orientation}\n      >\n        {['About', 'Experience', 'Education', 'Projects', 'Skills', 'Contact'].map(content => (\n          <ListItemLink key={content} aria-label={content} href={`#${content}`} onClick={ _e => updateActivateContent() }>{content}</ListItemLink>\n        ))}\n      </List>\n    </div>\n  )\n};\n\nexport default MenuButtons;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDrawer, changeDrawer, drawerState } from '../../features/drawerSlice';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Slide from '@material-ui/core/Slide';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Fab from '@material-ui/core/Fab';\nimport MenuButtons from '../MenuButtons/MenuButtons';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\n// drawerがStrictModeだとfindDOMNodeのエラーを吐くのでunstable_createMuiStrictModeThemeで回避\nimport { unstable_createMuiStrictModeTheme, ThemeProvider} from '@material-ui/core/styles';\n\nimport './Menu.scss';\n\nconst Menu: React.FC = () => {\n  const theme = unstable_createMuiStrictModeTheme({\n    palette: {\n      primary: {\n        main: '#BA68C8',\n        contrastText: '#F3E5F5'\n      },\n      secondary: {\n        main: '#EEE',\n        contrastText: '#BA68C8'\n      },\n      text: {\n        primary: '#453B47'\n      }\n    }\n  });\n  const isXS = useMediaQuery(theme.breakpoints.down('xs'));\n  const isIOS = typeof window !== \"undefined\" && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const trigger = useScrollTrigger();\n  const isOpen = useSelector(selectDrawer);\n  const dispatch = useDispatch();\n\n  const toggleDrawer = (isOpen: drawerState['value']) => (event: React.KeyboardEvent | React.MouseEvent) => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n    dispatch(changeDrawer(isOpen))\n  }\n\n  return (\n    <div className=\"Menu\" data-testid=\"Menu\">\n      { isXS ? (\n        <>\n          <Fab\n            size=\"small\"\n            color=\"secondary\"\n            aria-label=\"open drawer\"\n            className=\"fab-button\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </Fab>\n          <ThemeProvider theme={theme}>\n            <SwipeableDrawer\n              anchor=\"right\"\n              open={isOpen}\n              onClose={toggleDrawer(false)}\n              onOpen={toggleDrawer(true)}\n              disableBackdropTransition={!isIOS}\n              disableDiscovery={isIOS}\n            >\n              <IconButton onClick={toggleDrawer(false)} className=\"close-button\">\n                <CloseIcon color=\"primary\" />\n              </IconButton>\n              <MenuButtons orientation=\"vertical\" />\n            </SwipeableDrawer>\n          </ThemeProvider>\n        </>\n      ) : (\n        <div className=\"menus\">\n          <Slide appear={false} direction=\"down\" in={!trigger}>\n            <AppBar>\n              <Toolbar>\n                <MenuButtons orientation=\"horizonal\"/>\n              </Toolbar>\n            </AppBar>\n          </Slide>\n          <Toolbar />\n        </div>\n      )}\n    </div>\n  )\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Jumbotron.scss';\nimport { Avatar, makeStyles, createStyles, Theme, Button, Typography } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    large: {\n      width: theme.spacing(7),\n      height: theme.spacing(7),\n    },\n  }),\n);\n\nconst Jumbotron: React.FC = () => {\n  const classes = useStyles();\n  return(\n    <div className=\"Jumbotron\" data-testid=\"Jumbotron\">\n      <Alert severity=\"warning\"　variant=\"filled\" className=\"warning\" color=\"info\">まだ制作途中です。</Alert>\n      <Avatar alt=\"Miyoko Hirao\" src=\"/static/image/avator.jpg\" className={classes.large}/>\n      <dl className=\"outline\">\n        <dt><Typography variant=\"h4\" component=\"h1\">MIYOKO HIRAO</Typography></dt> \n        <dd><Typography variant=\"h6\">Frontend Engineer && Web Director</Typography></dd>\n      </dl>\n      <Button variant=\"outlined\" size=\"large\" color=\"secondary\">Download PDF</Button>\n    </div>\n  );  \n}\n\nexport default Jumbotron;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport './Title.scss';\n\ntype TitleProps = {\n  label: string;\n}\n\nconst Title: React.FC<TitleProps> = ({label}) => (\n  <div className=\"Title\" data-testid=\"Title\">\n    <Typography\n      variant=\"h4\"\n      component=\"h2\"\n      align=\"center\"\n      paragraph\n    >\n      {label}\n    </Typography>\n  </div>\n);\n\nexport default Title;\n","import React from 'react';\nimport { Typography, Container } from '@material-ui/core';\nimport Title from '../Title/Title';\nimport './About.scss';\n\nconst About: React.FC = () => (\n  <div className=\"About\" data-testid=\"About\">\n    <Container>\n      <Title label=\"About\"></Title>\n      <Typography variant=\"body2\">平尾 美代子です。Webディレクターやチームリーダー経験の方が長いですが、現在はフロントエンドエンジニア歴約4年です。ほぼ独学、かつトライ&エラーで乗り切ってきたので、知識も経験も最前線にいるわけではない自覚はありますが、どんな環境であっても意欲的に取り組む所存です。</Typography>\n    </Container>\n  </div>\n);\n\nexport default About;\n","import React, { useState, useEffect } from 'react';\nimport './Experience.scss';\nimport axios, { AxiosResponse, AxiosError } from 'axios';\nimport Title from '../Title/Title';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport RoomIcon from '@material-ui/icons/Room';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { RouteComponentProps } from 'react-router-dom';\n\ninterface Experience {\n  id: string;\n  date: string;\n  company: string;\n  occupation: string;\n  summary: string;\n}\n\nconst Experience: React.FC<RouteComponentProps> = (routeProps: RouteComponentProps) => {\n  const [experiences, setExperiences] = useState<Experience[]>([]);\n\n  useEffect(() => {\n    axios.get('https://my-json-server.typicode.com/uttttti/uttttti.github.io/experience')\n      .then((res: AxiosResponse<Experience[]>) => setExperiences(res.data))\n      .catch((err: AxiosError) => {\n        routeProps.history.push('./error')\n        throw err;\n      });\n    }, [routeProps.history]);\n\n  return (\n    <div className=\"Experience\" data-testid=\"Experience\">\n      <Title label=\"Experience\" />\n      <Timeline className=\"timeline\">\n        {experiences.map((experience: Experience) => (\n          <TimelineItem key={experience.id}>\n          <TimelineSeparator>\n            <TimelineDot color=\"primary\">\n              <RoomIcon />\n            </TimelineDot>\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">{experience.date}</Typography>\n            <Paper elevation={0} variant=\"outlined\" square className=\"box\">\n              <Typography variant=\"h6\" component=\"h3\">{experience.company}</Typography>\n              <Typography variant=\"subtitle2\" component=\"h4\" color=\"textSecondary\">{experience.occupation}</Typography>\n              <Typography variant=\"body2\" className=\"body\">{experience.summary}</Typography>\n            </Paper>\n          </TimelineContent>\n        </TimelineItem>\n        ))}\n      </Timeline>\n    </div>\n  );\n}\n\nexport default Experience;\n","import React, { useState, useEffect } from 'react';\nimport './Education.scss';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Paper, Typography, Container } from '@material-ui/core';\nimport axios, { AxiosResponse, AxiosError } from 'axios';\nimport Title from '../Title/Title';\n\ninterface Education {\n  id: string;\n  date: string;\n  school: string;\n  department: string;\n  summary: string;\n}\n\nconst Education: React.FC<RouteComponentProps> = (routeProps: RouteComponentProps) => {\n  const [educations, setEducations] = useState<Education[]>([]);\n\n  useEffect(() => {\n    axios.get('https://my-json-server.typicode.com/uttttti/uttttti.github.io/education/')\n      .then((res: AxiosResponse<Education[]>) => setEducations(res.data))\n      .catch((err: AxiosError) => {\n        routeProps.history.push('./error')\n        throw err;\n      });\n    }, [routeProps.history]);\n    \n  return(\n    <div className=\"Education\" data-testid=\"Education\" id=\"#Education\">\n      <Title label=\"Education\" />\n      <Container>\n        {educations.map((education: Education) => (\n          <Paper key={education.id} elevation={0} variant=\"outlined\" square className=\"box\">\n            <Typography variant=\"h6\" component=\"h3\">{education.school}</Typography>\n            <Typography variant=\"subtitle2\" component=\"h4\" color=\"textSecondary\">{education.department}</Typography>\n            <Typography variant=\"subtitle2\" component=\"h4\" color=\"textSecondary\">{education.date}</Typography>\n            <Typography variant=\"body2\" className=\"body\">{education.summary}</Typography>\n          </Paper>\n        ))}\n      </Container>\n    </div>\n  );\n}\n\nexport default Education;\n","import React, { useState, useEffect } from 'react';\nimport './Projects.scss';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Title from '../Title/Title';\nimport { Paper, Typography, Chip, Container } from '@material-ui/core';\nimport axios, { AxiosResponse, AxiosError } from 'axios';\n\ninterface Project {\n  id: string;\n  title: string;\n  summary: string;\n  skills: Array<string>;\n}\n\nconst Projects: React.FC<RouteComponentProps> = (routeProps: RouteComponentProps) => {\n  const [projects, setExperiences] = useState<Project[]>([]);\n\n  useEffect(() => {\n    axios.get('https://my-json-server.typicode.com/uttttti/uttttti.github.io/projects')\n      .then((res: AxiosResponse<Project[]>) => setExperiences(res.data))\n      .catch((err: AxiosError) => {\n        routeProps.history.push('./error')\n        throw err;\n      });\n    }, [routeProps.history]);\n\n  return (\n    <div className=\"Projects\" data-testid=\"Projects\">\n      <Title label=\"Projects\" />\n      <Container>\n        {projects.map((project: Project) => (\n          <Paper key={project.id} elevation={0} variant=\"outlined\" square className=\"box\">\n            <Typography variant=\"h6\" component=\"h3\" align=\"center\">{project.title}</Typography>\n            <Typography variant=\"body2\" className=\"body\">{project.summary}</Typography>\n            <div className=\"skill-wrapper\">\n              {project.skills.map((skill: string, index) => (\n                <Chip size=\"small\" key={skill + index} label={skill} className=\"skill\"></Chip>\n              ))}\n            </div>\n          </Paper>\n        ))}\n      </Container>\n    </div>\n);\n}\nexport default Projects;\n","import React, { useState, useEffect } from 'react';\nimport './Skills.scss';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Title from '../Title/Title';\nimport { Chip, Container } from '@material-ui/core';\nimport axios, { AxiosResponse, AxiosError } from 'axios';\n\ntype Skills = {\n  item: Array<string>\n};\n\nconst Skills: React.FC<RouteComponentProps> = (routeProps: RouteComponentProps) => {\n  const [skills, setSkills] = useState<Skills[\"item\"]>([]);\n\n  useEffect(() => {\n    axios.get('https://my-json-server.typicode.com/uttttti/uttttti.github.io/skills')\n      .then((res: AxiosResponse<Skills>) => setSkills(res.data.item))\n      .catch((err: AxiosError) => {\n        routeProps.history.push('./error')\n        throw err;\n      });\n    }, [routeProps.history]);\n  \n  return (\n    <div className=\"Skills\" data-testid=\"Skills\">\n      <Title label=\"Skills\" />\n      <Container className=\"skills-wrapper\">\n        {skills.map((skill: string, index) => (\n          <Chip key={skill + index} label={skill} className=\"skill\"></Chip>\n        ))}\n      </Container>\n    </div>\n);\n}\n\nexport default Skills;\n","import React from 'react';\nimport './Contact.scss';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faFacebook, faInstagram, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { IconButton, Typography } from '@material-ui/core';\n\nconst Contact: React.FC = () => (\n  <div className=\"Contact\" data-testid=\"Contact\">\n    <Typography variant=\"h5\" color=\"secondary\" className=\"title\">Get in Touch</Typography>\n    <IconButton href=\"https://github.com/uttttti\"><FontAwesomeIcon icon={faGithub} color=\"#F3E5F5\" size=\"lg\"/></IconButton>\n    <IconButton href=\"https://www.facebook.com/uttttti\"><FontAwesomeIcon icon={faTwitter} color=\"#F3E5F5\" size=\"lg\"/></IconButton>\n    <IconButton href=\"https://twitter.com/0345\"><FontAwesomeIcon icon={faFacebook} color=\"#F3E5F5\" size=\"lg\"/></IconButton>\n    <IconButton href=\"https://www.instagram.com/miyoko/\"><FontAwesomeIcon icon={faInstagram} color=\"#F3E5F5\" size=\"lg\"/></IconButton>\n  </div>\n);\n\nexport default Contact;\n","import React from 'react';\nimport './Footer.scss';\nimport { Fab } from '@material-ui/core';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nconst Footer: React.FC = () => {\n  const ScrollTop = () => {\n\n    const handleClick = () => {\n      window.scroll({\n        top: 0,\n        behavior: \"smooth\"\n      })\n    };\n\n    return (\n      <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\" onClick={handleClick}>\n        <KeyboardArrowUpIcon />\n      </Fab>\n    );\n  }\n  \n  return (\n    <div className=\"Footer\" data-testid=\"Footer\">\n      <ScrollTop></ScrollTop>\n      <footer>&copy;Miyoko Hirao</footer>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport './Page.scss';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Menu from '../Menu/Menu';\nimport Jumbotron from '../Jumbotron/Jumbotron';\nimport About from '../About/About';\nimport Experience from '../Experience/Experience';\nimport Education from '../Education/Education';\nimport Projects from '../Projects/Projects';\nimport Skills from '../Skills/Skills';\nimport Contact from '../Contact/Contact';\nimport Footer from '../Footer/Footer';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#BA68C8',\n      contrastText: '#F3E5F5'\n    },\n    secondary: {\n      main: '#EEE',\n      contrastText: '#BA68C8'\n    },\n    text: {\n      primary: '#453B47'\n    }\n  }\n});\n\nconst Page: React.FC<RouteComponentProps> = (routeProps: RouteComponentProps) => (\n  <div className=\"Page\" data-testid=\"Page\">\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n        <div className=\"app\" data-testid=\"App\" id=\"back-to-top-anchor\">\n          <div className=\"bg-img\"></div>\n          <Menu />\n          <Jumbotron />\n          <About />\n          <Experience { ...routeProps }/>\n          <Education { ...routeProps }/>\n          <Projects { ...routeProps }/>\n          <Skills { ...routeProps }/>\n          <Contact />\n          <Footer />\n        </div>\n    </ThemeProvider>\n  </div>\n);\n\nexport default Page;\n","import React from 'react';\nimport './Error.scss';\nimport { Container, Typography, Button } from '@material-ui/core';\nimport { Face as FaceIcon, ErrorOutline as ErrorOutlineIcon} from '@material-ui/icons';\n\nconst Error: React.FC = () => (\n  <div className=\"Error\" data-testid=\"Error\">\n    <Container>\n      <p className=\"sorry\">\n        S<FaceIcon /><ErrorOutlineIcon className=\"error-icon\"/>RRY.\n      </p>\n      <Typography variant=\"body2\" className=\"message\">Something went wrong.</Typography>\n    </Container>\n    <Button variant=\"outlined\" href=\"/\" className=\"back-btn\">Go Back</Button>\n  </div>\n);\n\nexport default Error;\n","import React from 'react';\nimport 'fontsource-poiret-one'\nimport 'fontsource-m-plus-1p'\nimport './App.scss';\nimport Page from './Page/Page';\nimport Error from './Error/Error';\nimport { BrowserRouter, Switch, Route, RouteComponentProps } from 'react-router-dom';\n\nconst App: React.FC = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" exact component={(routeProps: RouteComponentProps)  => <Page {...routeProps}></Page>} />\n      <Route component={Error} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { useSelector as rawUseSelector, TypedUseSelectorHook } from 'react-redux';\r\nimport drawerSliceReducer from '../features/drawerSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    isOpen: drawerSliceReducer\r\n  }\r\n});\r\nexport default store\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport const useSelector: TypedUseSelectorHook<RootState> = rawUseSelector\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './components/store';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}